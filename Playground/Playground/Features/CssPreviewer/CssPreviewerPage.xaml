<?xml version="1.0" encoding="utf-8" ?>
<ContentPage xmlns="http://xamarin.com/schemas/2014/forms"
             xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
             xmlns:magic="clr-namespace:MagicGradients;assembly=MagicGradients"
             xmlns:ic="clr-namespace:Playground.Resources.Fonts;assembly=Playground"
             xmlns:vm="clr-namespace:Playground.ViewModels;assembly=Playground"
             x:Class="Playground.Features.CssPreviewer.CssPreviewerPage"
             Title="CSS previewer"
             vm:ViewModelLocator.AutoWireViewModel="true">
    <ContentPage.Resources>
        <Style TargetType="Button" x:Key="NormalButton">
            <Setter Property="WidthRequest" Value="-1" />
        </Style>
        <Style TargetType="Button" x:Key="CompactButton">
            <Setter Property="Text" Value="" />
            <Setter Property="WidthRequest" Value="60" />
        </Style>
    </ContentPage.Resources>
    <VisualStateManager.VisualStateGroups>
        <VisualStateGroup>
            <VisualState x:Name="Compact">
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="0" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <Setter TargetName="AddButton" Property="Style" Value="{StaticResource CompactButton}" />
                    <Setter TargetName="ClearButton" Property="Style" Value="{StaticResource CompactButton}" />
                    <Setter TargetName="RefreshButton" Property="Style" Value="{StaticResource CompactButton}" />
                </VisualState.Setters>
            </VisualState>
            <VisualState x:Name="Normal">
                <VisualState.StateTriggers>
                    <AdaptiveTrigger MinWindowWidth="400" />
                </VisualState.StateTriggers>
                <VisualState.Setters>
                    <Setter TargetName="AddButton" Property="Button.Text" Value="Add" />
                    <Setter TargetName="AddButton" Property="Style" Value="{StaticResource NormalButton}" />
                    <Setter TargetName="ClearButton" Property="Button.Text" Value="Clear" />
                    <Setter TargetName="ClearButton" Property="Style" Value="{StaticResource NormalButton}" />
                    <Setter TargetName="RefreshButton" Property="Button.Text" Value="Refresh" />
                    <Setter TargetName="RefreshButton" Property="Style" Value="{StaticResource NormalButton}" />
                </VisualState.Setters>
            </VisualState>
        </VisualStateGroup>
    </VisualStateManager.VisualStateGroups>
    <Grid RowSpacing="0" RowDefinitions="40,Auto,*">
        <StackLayout Orientation="Horizontal" Spacing="0" StyleClass="ContrastElement">
            <Button x:Name="AddButton" Command="{Binding ShowSnippetsCommand}" StyleClass="ContrastElement" 
                    ImageSource="{ic:IcoMoon {x:Static ic:IcoMoonGlyph.Add}, Size=24}" />
            <Button x:Name="ClearButton" Command="{Binding ClearCommand}" StyleClass="ContrastElement" 
                    ImageSource="{ic:IcoMoon {x:Static ic:IcoMoonGlyph.Clear}, Size=24}" />
            <Button x:Name="RefreshButton" Command="{Binding RefreshCommand}" StyleClass="ContrastElement" 
                    ImageSource="{ic:IcoMoon {x:Static ic:IcoMoonGlyph.Refresh}, Size=24}" />
            <StackLayout Orientation="Horizontal" HorizontalOptions="FillAndExpand">
                <CheckBox IsChecked="{Binding IsHotReload}" HorizontalOptions="EndAndExpand" />
                <Label Text="Hot reload" VerticalOptions="Center" HorizontalOptions="End" Margin="0,0,10,0" />
            </StackLayout>
        </StackLayout>
        <Grid Grid.Row="1" ColumnDefinitions="50*,50*" RowDefinitions="200,Auto" RowSpacing="0" ColumnSpacing="0">
            <Editor Text="{Binding CssCode}" Placeholder="Functions: linear-gradient(col1, col2), radial-gradient(col1, col2)" Grid.ColumnSpan="2" />
            <Entry Text="{Binding CssSize}" Placeholder="300px 300px" Grid.Row="1" />
            <Entry Text="{Binding CssRepeat}" Placeholder="repeat" Grid.Row="1" Grid.Column="1" />
        </Grid>
        <magic:GradientView GradientSource="{Binding GradientSource}" 
                            GradientSize="{Binding GradientSize}" 
                            GradientRepeat="{Binding GradientRepeat}"
                            Grid.Row="2" />
        <Grid IsVisible="{Binding IsMessageVisible}" Grid.Row="2" Margin="20" HorizontalOptions="Center" VerticalOptions="Center">
            <BoxView Style="{StaticResource SemiTransparent}" />
            <Label Text="{Binding Message}" TextColor="White" Margin="10" HorizontalTextAlignment="Center" />
        </Grid>
    </Grid>
</ContentPage>